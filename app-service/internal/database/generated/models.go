// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package database

import (
	"github.com/jackc/pgx/v5/pgtype"
)

type Application struct {
	ID                pgtype.UUID        `db:"id" json:"id"`
	Name              string             `db:"name" json:"name"`
	Description       pgtype.Text        `db:"description" json:"description"`
	DeveloperID       pgtype.UUID        `db:"developer_id" json:"developer_id"`
	Category          string             `db:"category" json:"category"`
	Price             pgtype.Numeric     `db:"price" json:"price"`
	Size              int64              `db:"size" json:"size"`
	MinAndroidVersion string             `db:"min_android_version" json:"min_android_version"`
	CurrentVersion    string             `db:"current_version" json:"current_version"`
	Tags              []string           `db:"tags" json:"tags"`
	Screenshots       []string           `db:"screenshots" json:"screenshots"`
	StorageUrl        string             `db:"storage_url" json:"storage_url"`
	Rating            pgtype.Numeric     `db:"rating" json:"rating"`
	Downloads         int32              `db:"downloads" json:"downloads"`
	CreatedAt         pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt         pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
	SearchVector      interface{}        `db:"search_vector" json:"search_vector"`
}

type Category struct {
	ID          pgtype.UUID        `db:"id" json:"id"`
	Name        string             `db:"name" json:"name"`
	Description pgtype.Text        `db:"description" json:"description"`
	CreatedAt   pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt   pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
}

type Download struct {
	ID            pgtype.UUID        `db:"id" json:"id"`
	UserID        pgtype.UUID        `db:"user_id" json:"user_id"`
	ApplicationID pgtype.UUID        `db:"application_id" json:"application_id"`
	Timestamp     pgtype.Timestamptz `db:"timestamp" json:"timestamp"`
	IpAddress     string             `db:"ip_address" json:"ip_address"`
	Success       bool               `db:"success" json:"success"`
	ErrorMessage  pgtype.Text        `db:"error_message" json:"error_message"`
}
