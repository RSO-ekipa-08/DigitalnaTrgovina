syntax = "proto3";
package reviews;

option go_package = "reviews/proto";

service ReviewService {
  // Create
  rpc AddReview (AddReviewRequest) returns (AddReviewResponse);

  // Read
  rpc GetReview (GetReviewRequest) returns (GetReviewResponse);
  rpc GetReviews (GetReviewsRequest) returns (GetReviewsResponse);

  // Update
  rpc UpdateReview (UpdateReviewRequest) returns (UpdateReviewResponse);

  // Delete
  rpc DeleteReview (DeleteReviewRequest) returns (DeleteReviewResponse);

  // Existing moderation endpoint
  rpc ModerateComment (ModerateCommentRequest) returns (ModerateCommentResponse);
}

// Add new messages for CRUD operations
message GetReviewRequest {
  string review_id = 1;
  string tenant_id = 2;
}

message GetReviewResponse {
  Review review = 1;
}

message UpdateReviewRequest {
  string review_id = 1;
  string tenant_id = 2;
  uint32 score = 3;
  string comment = 4;
}

message UpdateReviewResponse {
  Review review = 1;
  bool success = 2;
  string message = 3;
}

message DeleteReviewRequest {
  string review_id = 1;
  string tenant_id = 2;
}

message DeleteReviewResponse {
  bool success = 1;
  string message = 2;
}

// Model za oceno in komentar
message Review {
  string id = 1;
  string app_id = 2;
  string user_id = 3;
  uint32 score = 4; // ocena od 1-5
  string comment = 5;
  string created_at = 6;
  bool is_moderated = 7;
  ModerationType moderation_status = 8;
  string tenant_id = 9;
}

// Enum za status moderacije
enum ModerationType {
  PENDING = 0;
  APPROVED = 1;
  REJECTED = 2;
}

// Request za dodajanje ocen
message AddReviewRequest {
  string app_id = 1;
  string user_id = 2;
  uint32 score = 3;
  string comment = 4;
  string tenant_id = 5;
}

// Response ob dodatku ocene
message AddReviewResponse {
  Review review = 1;
  bool success = 2;
  string message = 3;
}

// Request za pridobivanje ocen
message GetReviewsRequest {
  string app_id = 1;
  uint32 page = 2;
  uint32 page_size = 3;
  bool include_moderated_only = 4;
  string tenant_id = 5;
}

// Response ob pridobitvi ocen
message GetReviewsResponse {
  repeated Review reviews = 1;
  uint32 total_count = 2;
  double average_score = 3;
}

// Request za moderiranje komentarja
message ModerateCommentRequest {
  string review_id = 1;
  ModerationType moderation_status = 2;
  string moderator_id = 3;
  string moderation_note = 4;
  string tenant_id = 5;
}

// Response ob moderiranju komentarja
message ModerateCommentResponse {
  bool success = 1;
  string message = 2;
  Review updated_review = 3;
}
